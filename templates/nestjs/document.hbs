/* eslint-disable */
/* ------------------------------------------------------------
 File auto-generated

 @summary {{astDocument.title}}
 @description {{astDocument.description}}
 @version {{astDocument.version}}
------------------------------------------------------------ */

import { Body, Get, Param, Post, Query, Patch, Delete, Headers, Head, Options, SetMetadata, PipeTransform, ArgumentMetadata, BadRequestException } from '@nestjs/common';
import { DateTime, Duration } from "luxon";

const Scopes = (...scopes: string[]) => SetMetadata('scopes', scopes);

{{#astDocument}}
export type {{replace title (toRegex "(-|\.| )+" "g") "_"}}ControllerResponse<BODY = void, HEADER = Record<string, any>> = {
    $status?: number,
    $headers?: HEADER,
    $body: BODY,
};

type ValidatorFn = (inputToValidate: any, ...omit: string[]) => Map<string, string | string[]>;

function addOrSet(map: Map<string, string | string[]>, key: string, value: string | string[]): Map<string, string | string[]> {
  const existing: undefined | string | string[] = map.get(key);

  if (existing === undefined) {
    map.set(key, value);
  } else {
    map.set(key, [...existing, ...value]);
  }

  return map;
}

export class {{replace title (toRegex "(-|\.| )+" "g") "_"}}ValidationPipe implements PipeTransform {
  constructor(private readonly _validatorFn: ValidatorFn) {}

  transform(value: any, metadata: ArgumentMetadata) {
    const error: Record<string, string | string[]> = Object.fromEntries(this._validatorFn(value));
    if (Object.keys(error).length > 0) {
      throw new BadRequestException({ statusCode: 400, message: 'Bad Request', error });
    }
    return value;
  }
};

{{#if models}}
//#region Models
{{#each models}}
{{>declaration suffix="Model"}}
{{>validation.declaration suffix="ModelValidator"}}
{{/each}}
//#endregion
{{/if}}

{{#if responses}}
//#region Responses
{{#each responses}}
{{>declaration suffix="Response"}}
{{>validation.declaration suffix="ResponseValidator"}}
{{/each}}
//#endregion
{{/if}}

{{#if requests}}
//#region Requests
{{#each requests}}
{{>declaration suffix="Requests"}}
{{>validation.declaration suffix="RequestsValidator"}}
{{/each}}
//#endregion
{{/if}}

{{#if pathParameters}}
//#region Path Parameters
{{#each pathParameters}}
{{>declaration suffix="PathParameter"}}
{{>validation.declaration suffix="PathParameterValidator"}}
{{/each}}
//#endregion
{{/if}}

{{#if headerParameters}}
//#region Header Parameters
{{#each headerParameters}}
{{>declaration suffix="HeaderParameter"}}
{{>validation.declaration suffix="HeaderParameterValidator"}}
{{/each}}
//#endregion
{{/if}}

{{#if queryParameters}}
//#region Query Parameters
{{#each queryParameters}}
{{>declaration suffix="QueryParameter"}}
{{>validation.declaration suffix="QueryParameterValidator"}}
{{/each}}
//#endregion
{{/if}}

{{#if cookieParameters}}
//#region Cookie Parameters
{{#each cookieParameters}}
{{>declaration suffix="CookieParameter"}}
{{>validation.declaration suffix="CookieParameterValidator"}}
{{/each}}
//#endregion
{{/if}}

{{#if operations}}
export abstract class {{replace title (toRegex "(-|\.| )+" "g") "_"}}ControllerGenerated {
{{#each operations}}
{{>declaration prefix=(replace ../title (toRegex "(-|\.| )+" "g") "_")}}
{{/each}}
}
{{/if}}

{{/astDocument}}
